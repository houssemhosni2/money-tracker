[{"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/index.js":"1","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/App.js":"2","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/store/store.js":"3","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/Navbar.js":"4","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/ProtectedRoute.js":"5","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/NotAdmin.js":"6","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/Home.js":"7","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/Login.js":"8","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/income/AddIncome.js":"9","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/AdminRoute.js":"10","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/expense/ExpensesList.js":"11","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/DashboardData.js":"12","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/expense/AddExpense.js":"13","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/Profile.js":"14","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/Register.js":"15","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/expense/EditExpense.js":"16","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/users/usersSlices.js":"17","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/expenses/expensesSlices.js":"18","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/DisabledButton.js":"19","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/ContentDetails.js":"20","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/Public/PublicNavbar.js":"21","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/Private/PrivateNavbar.js":"22","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/baseURL.js":"23","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/AppPagination.js":"24","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Loading.js":"25","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/ErrorDisplayMessage.js":"26","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/dateFormatter.js":"27","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/income/incomeSlices.js":"28","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/income/IncomeList.js":"29","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/EditContent.js":"30","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/accountsStats/accountStatSlices.js":"31","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/GraphDtata.js":"32","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/cuurencyFormatter.js":"33","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/accountStatistics.js":"34","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileStats.js":"35","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileExpList.js":"36","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/Templates/UserProfileIncList.js":"37","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/Templates/UserProfileContentDetails.js":"38","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileContentDetails.js":"39","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileIncList.js":"40","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UpdateProfile.js":"41"},{"size":298,"mtime":1632532040394,"results":"42","hashOfConfig":"43"},{"size":2248,"mtime":1633569559025,"results":"44","hashOfConfig":"43"},{"size":468,"mtime":1633396992512,"results":"45","hashOfConfig":"43"},{"size":382,"mtime":1632961745846,"results":"46","hashOfConfig":"43"},{"size":467,"mtime":1632964144581,"results":"47","hashOfConfig":"43"},{"size":468,"mtime":1633045101673,"results":"48","hashOfConfig":"43"},{"size":3507,"mtime":1632529476925,"results":"49","hashOfConfig":"43"},{"size":3872,"mtime":1633654024271,"results":"50","hashOfConfig":"43"},{"size":4528,"mtime":1633311544944,"results":"51","hashOfConfig":"43"},{"size":542,"mtime":1633045423639,"results":"52","hashOfConfig":"43"},{"size":4300,"mtime":1633222037079,"results":"53","hashOfConfig":"43"},{"size":6021,"mtime":1633652690331,"results":"54","hashOfConfig":"43"},{"size":4538,"mtime":1633311044666,"results":"55","hashOfConfig":"43"},{"size":4363,"mtime":1633655599478,"results":"56","hashOfConfig":"43"},{"size":4906,"mtime":1633654629559,"results":"57","hashOfConfig":"43"},{"size":4040,"mtime":1633224192889,"results":"58","hashOfConfig":"43"},{"size":6480,"mtime":1633655155166,"results":"59","hashOfConfig":"43"},{"size":4426,"mtime":1633311150821,"results":"60","hashOfConfig":"43"},{"size":215,"mtime":1633655339673,"results":"61","hashOfConfig":"43"},{"size":1972,"mtime":1633568757779,"results":"62","hashOfConfig":"43"},{"size":1941,"mtime":1633525533716,"results":"63","hashOfConfig":"43"},{"size":2343,"mtime":1632964944284,"results":"64","hashOfConfig":"43"},{"size":69,"mtime":1632570215994,"results":"65","hashOfConfig":"43"},{"size":557,"mtime":1633221236861,"results":"66","hashOfConfig":"43"},{"size":736,"mtime":1633655203066,"results":"67","hashOfConfig":"43"},{"size":375,"mtime":1633655206002,"results":"68","hashOfConfig":"43"},{"size":339,"mtime":1633568896240,"results":"69","hashOfConfig":"43"},{"size":4427,"mtime":1633311323407,"results":"70","hashOfConfig":"43"},{"size":4433,"mtime":1633654691362,"results":"71","hashOfConfig":"43"},{"size":4348,"mtime":1633309090017,"results":"72","hashOfConfig":"43"},{"size":1471,"mtime":1633396949078,"results":"73","hashOfConfig":"43"},{"size":1222,"mtime":1633483128729,"results":"74","hashOfConfig":"43"},{"size":191,"mtime":1633484683181,"results":"75","hashOfConfig":"43"},{"size":485,"mtime":1633485276980,"results":"76","hashOfConfig":"43"},{"size":3476,"mtime":1633484762314,"results":"77","hashOfConfig":"43"},{"size":3619,"mtime":1633568854921,"results":"78","hashOfConfig":"43"},{"size":2458,"mtime":1633486021833,"results":"79","hashOfConfig":"43"},{"size":1356,"mtime":1633487913461,"results":"80","hashOfConfig":"43"},{"size":1627,"mtime":1633654977974,"results":"81","hashOfConfig":"43"},{"size":3697,"mtime":1633569288891,"results":"82","hashOfConfig":"43"},{"size":5119,"mtime":1633655477007,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1b5y01t",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/index.js",[],["181","182"],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/App.js",["183"],"import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport EditContent from \"./components/EditContent\";\nimport AdminRoute from \"./components/Navigation/AdminRoute\";\nimport Navbar from \"./components/Navigation/Navbar\";\nimport ProtectedRoute from \"./components/Navigation/ProtectedRoute\";\nimport NotAdmin from \"./components/NotAdmin\";\nimport AddExpense from \"./pages/expense/AddExpense\";\nimport ExpensesList from \"./pages/expense/ExpensesList\";\nimport Home from \"./pages/Home\";\nimport AddIncome from \"./pages/income/AddIncome\";\nimport IncomeList from \"./pages/income/IncomeList\";\nimport DashboardData from \"./pages/users/DashboardData\";\nimport Login from \"./pages/users/Login\";\nimport Profile from \"./pages/users/Profile\";\nimport Register from \"./pages/users/Register\";\nimport UpdateProfile from \"./pages/users/UpdateProfile\";\nimport UserProfileExpList from \"./pages/users/UserProfileExpList\";\nimport UserProfileIncList from \"./pages/users/UserProfileIncList\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <ProtectedRoute exact path=\"/expenses\" component={ExpensesList} />\n        <ProtectedRoute exact path=\"/incomes\" component={IncomeList} />\n        <ProtectedRoute exact path=\"/edit\" component={EditContent} />\n        <ProtectedRoute\n          exact\n          path=\"/update-profile\"\n          component={UpdateProfile}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/user-expenses\"\n          component={UserProfileExpList}\n        />\n        <ProtectedRoute\n          exact\n          path=\"/user-income\"\n          component={UserProfileIncList}\n        />\n        <ProtectedRoute exact path=\"/dashboard\" component={DashboardData} />\n        <Route exact path=\"/not-found\" component={NotAdmin} />\n        <ProtectedRoute exact path=\"/add-income\" component={AddIncome} />\n        <ProtectedRoute exact path=\"/add-expense\" component={AddExpense} />\n        <ProtectedRoute exact path=\"/profile\" component={Profile} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/store/store.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/Navbar.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/ProtectedRoute.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/NotAdmin.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/Home.js",["184"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport bg from \"../img/data.svg\";\nconst Home = () => {\n  return (\n    <>\n      <section className=\"position-relative pb-5\">\n        <img\n          className=\"d-none d-lg-block position-absolute top-0 start-0 bottom-0 w-50 h-100 img-fluid \"\n          style={{ objectFit: \"cover\" }}\n          src={bg}\n          alt=\"\"\n        />\n        <div className=\"position-relative\">\n          <div className=\"container\">\n            <div className=\"row pt-5\">\n              <div className=\"col-12 col-lg-5 ms-auto\">\n                <div className=\"mb-5\">\n                  <h2 className=\"display-4 fw-bold mb-5\">\n                    Keep Track of Your Income & Expenses\n                  </h2>\n                  <p className=\"lead text-muted mb-5\">\n                    View all your income and expenses flow from your team in one\n                    dashboard\n                  </p>\n                  <div className=\"d-flex flex-wrap\">\n                    <Link\n                      to=\"/profile\"\n                      className=\"btn btn-primary me-2 mb-2 mb-sm-0\"\n                    >\n                      Track your performance\n                    </Link>\n                    <a\n                      target=\"_blank\"\n                      className=\"btn btn-secondary mb-2 mb-sm-0\"\n                      href=\"https://www.youtube.com/channel/UCvu6J9q1AM6q4xysGqAvVyw\"\n                    >\n                      Video Tutorial\n                    </a>\n                  </div>\n                </div>\n                <h1 className=\"text-danger\">Admin Login </h1>\n                <p>User name: admin@gmail.com</p>\n                <p>password: 12345</p>\n                <div className=\"row align-items-center pt-5\">\n                  <div className=\"col-6 col-md-4 col-lg-3 col-xl-2 text-center mb-5\">\n                    <img\n                      className=\"d-inline-block img-fluid\"\n                      src=\"bootstrap5-plain-assets/logos/slack.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"col-6 col-md-4 col-lg-3 col-xl-2 text-center mb-5\">\n                    <img\n                      className=\"d-inline-block img-fluid\"\n                      src=\"bootstrap5-plain-assets/logos/dropbox.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"col-6 col-md-4 col-lg-3 col-xl-2 text-center mb-5\">\n                    <img\n                      className=\"d-inline-block img-fluid\"\n                      src=\"bootstrap5-plain-assets/logos/spotify.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"col-6 col-md-4 col-lg-3 col-xl-2 text-center mb-5\">\n                    <img\n                      className=\"d-inline-block img-fluid\"\n                      src=\"bootstrap5-plain-assets/logos/stripe.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                  <div className=\"col-6 col-md-4 col-lg-3 col-xl-2 text-center mb-5\">\n                    <img\n                      className=\"d-inline-block img-fluid\"\n                      src=\"bootstrap5-plain-assets/logos/netflix.png\"\n                      alt=\"\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/Login.js",["185"],"import React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { loginUserAction } from \"../../redux/slices/users/usersSlices\";\nimport DisabledButton from \"../../components/DisabledButton\";\n\n//form validations\nconst formSchema = Yup.object({\n  email: Yup.string().required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\"),\n});\n\nconst Login = () => {\n  //history\n  const history = useHistory();\n\n  //dispatch\n  const dispatch = useDispatch();\n  //get data from store\n\n  const user = useSelector(state => state?.users);\n  const { userAppErr, userServerErr, userLoading, userAuth } = user;\n\n  //formik form\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: values => {\n      dispatch(loginUserAction(values));\n    },\n    validationSchema: formSchema,\n  });\n\n  // Redirect\n  useEffect(() => {\n    if (userAuth) {\n      history.push(\"/profile\");\n    }\n  }, [userAuth]);\n\n  return (\n    <section\n      style={{ height: \"100vh\" }}\n      className=\"position-relative py-5  overflow-hidden bg-warning\"\n    >\n      <div className=\"d-none d-md-block position-absolute top-0 start-0 bg-dark w-75 h-100\"></div>\n      <div className=\"d-md-none position-absolute top-0 start-0 bg-primary w-100 h-100\"></div>\n      <div className=\"container position-relative mx-auto\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-12 col-lg-5 mb-5\">\n            <div>\n              <h2 className=\"display-5 fw-bold mb-4 text-white\">\n                Keep Track of what you are spending\n              </h2>\n              <hr className=\"text-warning w-100\" />\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-5 ms-auto\">\n            <div className=\"p-5 bg-light rounded text-center\">\n              <span className=\"text-muted\">Sign In</span>\n              <h3 className=\"fw-bold mb-5\">Login to your account</h3>\n              {/* Display Err */}\n\n              {userAppErr || userServerErr ? (\n                <div class=\"alert alert-danger\" role=\"alert\">\n                  {userServerErr} {userAppErr}\n                </div>\n              ) : null}\n              <form onSubmit={formik.handleSubmit}>\n                <input\n                  value={formik.values.email}\n                  onChange={formik.handleChange(\"email\")}\n                  onBlur={formik.handleBlur(\"email\")}\n                  className=\"form-control mb-2\"\n                  type=\"email\"\n                  placeholder=\"E-mail address\"\n                />\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.email && formik.errors.email}\n                </div>\n                <input\n                  value={formik.values.password}\n                  onChange={formik.handleChange(\"password\")}\n                  onBlur={formik.handleBlur(\"password\")}\n                  className=\"form-control mb-2\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.password && formik.errors.password}\n                </div>\n\n                <div>\n                  {userLoading ? (\n                    <DisabledButton />\n                  ) : (\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-primary py-2 w-100 mb-4\"\n                    >\n                      Login\n                    </button>\n                  )}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/income/AddIncome.js",["186","187","188","189"],"import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moneySVG from \"../../img/money.svg\";\nimport { createIncomeAction } from \"../../redux/slices/income/incomeSlices\";\nimport DisabledButton from \"../../components/DisabledButton\";\nimport ErrorDisplayMessage from \"../../components/ErrorDisplayMessage\";\n//form validations\nconst formSchema = Yup.object({\n  title: Yup.string().required(\"title is required\"),\n  description: Yup.string().required(\"description: is required\"),\n  amount: Yup.number().required(\"Amount is required\"),\n});\n\nconst AddIncome = () => {\n  const history = useHistory();\n  //dispatch\n  const dispatch = useDispatch();\n  //formik form\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      amount: \"\",\n    },\n    onSubmit: values => {\n      dispatch(createIncomeAction(values));\n    },\n    validationSchema: formSchema,\n  });\n\n  //Get expense created from store\n  const state = useSelector(state => state.income);\n  const { loading, appErr, serverErr, expenseCreated, isIncCreated } = state;\n\n  //Redirect\n  useEffect(() => {\n    if (isIncCreated) history.push(\"/incomes\");\n  }, [isIncCreated, dispatch]);\n  return (\n    <>\n      <section className=\"py-5 bg-success vh-100\">\n        <div className=\"container text-center\">\n          <a className=\"d-inline-block mb-5\">\n            <img\n              className=\"img-fluid\"\n              src={moneySVG}\n              alt=\"SVGeXPENSES\"\n              width=\"200\"\n            />\n          </a>\n          <div className=\"row mb-4\">\n            <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\n              <div className=\"p-4 shadow-sm rounded bg-white\">\n                <form onSubmit={formik.handleSubmit}>\n                  <span className=\"text-muted\">Income</span>\n                  <h2 className=\"mb-4 fw-light\">Record New Income</h2>\n                  {/* Display income Err */}\n                  {serverErr || appErr ? (\n                    <ErrorDisplayMessage>\n                      {serverErr} {appErr}\n                    </ErrorDisplayMessage>\n                  ) : null}\n                  <div className=\"mb-3 input-group\">\n                    <input\n                      value={formik.values.title}\n                      onChange={formik.handleChange(\"title\")}\n                      onBlur={formik.handleBlur(\"title\")}\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter Title\"\n                    />\n                  </div>\n                  {/* Err */}\n                  <div className=\"text-danger mb-2\">\n                    {formik.touched.title && formik.errors.title}\n                  </div>\n                  <div className=\"mb-3 input-group\">\n                    <input\n                      value={formik.values.description}\n                      onChange={formik.handleChange(\"description\")}\n                      onBlur={formik.handleBlur(\"description\")}\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter Description\"\n                    />\n                  </div>\n                  {/* Err */}\n                  <div className=\"text-danger mb-2\">\n                    {formik.touched.description && formik.errors.description}\n                  </div>\n                  <div className=\"mb-3 input-group\">\n                    <input\n                      value={formik.values.amount}\n                      onChange={formik.handleChange(\"amount\")}\n                      onBlur={formik.handleBlur(\"amount\")}\n                      className=\"form-control\"\n                      type=\"number\"\n                      placeholder=\"Enter Amount\"\n                    />\n                  </div>\n                  {/* Err */}\n                  <div className=\"text-danger mb-2\">\n                    {formik.touched.amount && formik.errors.amount}\n                  </div>\n                  {loading ? (\n                    <DisabledButton />\n                  ) : (\n                    <button type=\"submit\" className=\"btn btn-danger mb-4 w-100\">\n                      Record Income\n                    </button>\n                  )}\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default AddIncome;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/AdminRoute.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/expense/ExpensesList.js",["190","191"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport AppPagination from \"../../components/AppPagination\";\nimport ContentDetails from \"../../components/ContentDetails\";\nimport ErrorDisplayMessage from \"../../components/ErrorDisplayMessage\";\nimport LoadingComponent from \"../../components/Loading\";\nimport { fetchAllExpAction } from \"../../redux/slices/expenses/expensesSlices\";\n\nconst ExpensesList = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  //get expenses from store\n  const expenses = useSelector(state => state.expenses);\n  const { loading, appErr, serverErr, expenseList } = expenses;\n  //fetch expenses\n  useEffect(() => {\n    dispatch(fetchAllExpAction(+page));\n  }, [dispatch, page, setPage]);\n  return (\n    <>\n      {loading ? (\n        <LoadingComponent />\n      ) : appErr || serverErr ? (\n        <ErrorDisplayMessage>\n          {serverErr} {appErr}\n        </ErrorDisplayMessage>\n      ) : (\n        <section className=\"py-6\">\n          <div className=\"container-fluid\">\n            <div className=\"position-relative border rounded-2\">\n              <a\n                className=\"position-absolute top-0 end-0 mt-4 me-4\"\n                href=\"#\"\n              ></a>\n              <div className=\"pt-8 px-8 mb-8\">\n                <h6 className=\"mb-0 fs-3\">Recent Expense transactions</h6>\n                <p className=\"mb-0\">\n                  Below is the history of your expense transactions records\n                </p>\n                <Link to=\"/\" className=\"btn  btn-outline-danger me-2 m-2\">\n                  New Expense\n                </Link>\n              </div>\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"table-active\">\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Withdrawed By</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Title</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Description</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Amount</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Date</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Action</small>\n                      </button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {loading ? (\n                    <h1>Loading...</h1>\n                  ) : appErr || serverErr ? (\n                    <div>err</div>\n                  ) : expenseList?.docs?.length <= 0 ? (\n                    <h1>No Expense Found</h1>\n                  ) : (\n                    expenseList?.docs?.map(exp => (\n                      <>\n                        <ContentDetails key={exp?._id} item={exp} />\n                      </>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"20px\",\n            }}\n          >\n            <AppPagination\n              setPage={setPage}\n              pageNumber={expenseList?.totalPages}\n            />\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default ExpensesList;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/DashboardData.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/expense/AddExpense.js",["192","193","194","195"],"import React, { useEffect, useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moneySVG from \"../../img/money.svg\";\nimport { createExpAction } from \"../../redux/slices/expenses/expensesSlices\";\nimport DisabledButton from \"../../components/DisabledButton\";\nimport ErrorDisplayMessage from \"../../components/ErrorDisplayMessage\";\n\n//form validations\nconst formSchema = Yup.object({\n  title: Yup.string().required(\"title is required\"),\n  description: Yup.string().required(\"description: is required\"),\n  amount: Yup.number().required(\"Amount is required\"),\n});\n\nconst AddExpense = props => {\n  const history = useHistory();\n  //dispatch\n  const dispatch = useDispatch();\n  //formik form\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      description: \"\",\n      amount: \"\",\n    },\n    onSubmit: values => {\n      dispatch(createExpAction(values));\n    },\n    validationSchema: formSchema,\n  });\n\n  //Get expense created from store\n  const state = useSelector(state => state.expenses);\n  const { loading, appErr, serverErr, expenseCreated, isExpCreated } = state;\n\n  //Redirect\n  useEffect(() => {\n    if (isExpCreated) history.push(\"/expenses\");\n  }, [isExpCreated, dispatch]);\n  return (\n    <>\n      <section className=\"py-5 bg-danger vh-100\">\n        <div className=\"container text-center\">\n          <a className=\"d-inline-block mb-5\">\n            <img\n              className=\"img-fluid\"\n              src={moneySVG}\n              alt=\"SVGeXPENSES\"\n              width=\"200\"\n            />\n          </a>\n          <div className=\"row mb-4\">\n            <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\n              <div className=\"p-4 shadow-sm rounded bg-white\">\n                <form onSubmit={formik.handleSubmit}>\n                  <span className=\"text-muted\">Expense</span>\n                  <h2 className=\"mb-4 fw-light\">Record New Expense</h2>\n                  {/* Display income Err */}\n                  {serverErr || appErr ? (\n                    <ErrorDisplayMessage>\n                      {serverErr} {appErr}\n                    </ErrorDisplayMessage>\n                  ) : null}\n\n                  <div className=\"mb-3 input-group\">\n                    <input\n                      value={formik.values.title}\n                      onChange={formik.handleChange(\"title\")}\n                      onBlur={formik.handleBlur(\"title\")}\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter Title\"\n                    />\n                  </div>\n                  {/* Err */}\n                  <div className=\"text-danger mb-2\">\n                    {formik.touched.title && formik.errors.title}\n                  </div>\n                  <div className=\"mb-3 input-group\">\n                    <input\n                      value={formik.values.description}\n                      onChange={formik.handleChange(\"description\")}\n                      onBlur={formik.handleBlur(\"description\")}\n                      className=\"form-control\"\n                      type=\"text\"\n                      placeholder=\"Enter Description\"\n                    />\n                  </div>\n                  {/* Err */}\n                  <div className=\"text-danger mb-2\">\n                    {formik.touched.description && formik.errors.description}\n                  </div>\n                  <div className=\"mb-3 input-group\">\n                    <input\n                      value={formik.values.amount}\n                      onChange={formik.handleChange(\"amount\")}\n                      onBlur={formik.handleBlur(\"amount\")}\n                      className=\"form-control\"\n                      type=\"number\"\n                      placeholder=\"Enter Amount\"\n                    />\n                  </div>\n                  {/* Err */}\n                  <div className=\"text-danger mb-2\">\n                    {formik.touched.amount && formik.errors.amount}\n                  </div>\n                  {loading ? (\n                    <DisabledButton />\n                  ) : (\n                    <button type=\"submit\" className=\"btn btn-danger mb-4 w-100\">\n                      Record Expense\n                    </button>\n                  )}\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default AddExpense;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/Profile.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/Register.js",["196"],"import React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { registerUserAction } from \"../../redux/slices/users/usersSlices\";\nimport DisabledButton from \"../../components/DisabledButton\";\n\n//form validations\nconst formSchema = Yup.object({\n  email: Yup.string().required(\"Email is required\"),\n  password: Yup.string().required(\"Password is required\"),\n  firstname: Yup.string().required(\"First Name is required\"),\n  lastname: Yup.string().required(\"Last Name is required\"),\n});\n\nconst Register = () => {\n  //history\n  const history = useHistory();\n  //get data from store\n  const user = useSelector(state => state?.users);\n  const { userAppErr, userServerErr, userLoading, isRegistered } = user;\n\n  //dispatch\n  const dispatch = useDispatch();\n  //formik form\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n    },\n    onSubmit: values => {\n      dispatch(registerUserAction(values));\n    },\n    validationSchema: formSchema,\n  });\n\n  // Redirect\n  useEffect(() => {\n    if (isRegistered) {\n      history.push(\"/login\");\n    }\n  }, [isRegistered]);\n\n  return (\n    <section className=\"position-relative py-5 overflow-hidden vh-100\">\n      <div className=\"d-none d-md-block position-absolute top-0 start-0 bg-dark w-75 h-100\"></div>\n      <div className=\"d-md-none position-absolute top-0 start-0 bg-primary w-100 h-100\"></div>\n      <div className=\"container position-relative mx-auto\">\n        <div className=\"row align-items-center\">\n          <div className=\"col-12 col-lg-5 mb-5\">\n            <div>\n              <h2 className=\"display-5 fw-bold mb-4 text-white\">\n                Keep Track of your income and expenses flow\n              </h2>\n            </div>\n          </div>\n          <div className=\"col-12 col-lg-5 ms-auto\">\n            <div className=\"p-5 bg-light rounded text-center\">\n              <form onSubmit={formik.handleSubmit}>\n                <span className=\"text-muted\">New User</span>\n                <h3 className=\"fw-bold mb-5\">Register</h3>\n\n                {/* Display err here */}\n                {userAppErr || userServerErr ? (\n                  <div class=\"alert alert-danger\" role=\"alert\">\n                    {userServerErr} {userAppErr}\n                  </div>\n                ) : null}\n                <input\n                  value={formik.values.firstname}\n                  onChange={formik.handleChange(\"firstname\")}\n                  onBlur={formik.handleBlur(\"firstname\")}\n                  className=\"form-control mb-2\"\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                />\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.firstname && formik.errors.firstname}\n                </div>\n                <input\n                  value={formik.values.lastname}\n                  onChange={formik.handleChange(\"lastname\")}\n                  onBlur={formik.handleBlur(\"lastname\")}\n                  className=\"form-control mb-2\"\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                />\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.lastname && formik.errors.lastname}\n                </div>\n                <input\n                  value={formik.values.email}\n                  onChange={formik.handleChange(\"email\")}\n                  onBlur={formik.handleBlur(\"email\")}\n                  className=\"form-control mb-2\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                />\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.email && formik.errors.email}\n                </div>\n                <input\n                  value={formik.values.password}\n                  onChange={formik.handleChange(\"password\")}\n                  onBlur={formik.handleBlur(\"password\")}\n                  className=\"form-control mb-2\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.password && formik.errors.password}\n                </div>\n                {userLoading ? (\n                  <DisabledButton />\n                ) : (\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary py-2 w-100 mb-4\"\n                  >\n                    Register\n                  </button>\n                )}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Register;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/expense/EditExpense.js",["197","198"],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/users/usersSlices.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/expenses/expensesSlices.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/DisabledButton.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/ContentDetails.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/Public/PublicNavbar.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Navigation/Private/PrivateNavbar.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/baseURL.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/AppPagination.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/Loading.js",["199","200"],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/ErrorDisplayMessage.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/dateFormatter.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/income/incomeSlices.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/income/IncomeList.js",["201","202","203"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport AppPagination from \"../../components/AppPagination\";\nimport ContentDetails from \"../../components/ContentDetails\";\nimport ErrorDisplayMessage from \"../../components/ErrorDisplayMessage\";\nimport LoadingComponent from \"../../components/Loading\";\nimport { fetchAllExpAction } from \"../../redux/slices/expenses/expensesSlices\";\nimport { fetchAllIncomeAction } from \"../../redux/slices/income/incomeSlices\";\n\nconst IncomeList = () => {\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  //get expenses from store\n  const expenses = useSelector(state => state.income);\n  const { loading, appErr, serverErr, incomeList } = expenses;\n  //fetch expenses\n  useEffect(() => {\n    dispatch(fetchAllIncomeAction(+page));\n  }, [dispatch, page, setPage]);\n  return (\n    <>\n      {loading ? (\n        <LoadingComponent />\n      ) : appErr || serverErr ? (\n        <ErrorDisplayMessage>\n          {serverErr} {appErr}\n        </ErrorDisplayMessage>\n      ) : (\n        <section className=\"py-6\">\n          <div className=\"container-fluid\">\n            <div className=\"position-relative border rounded-2\">\n              <a\n                className=\"position-absolute top-0 end-0 mt-4 me-4\"\n                href=\"#\"\n              ></a>\n              <div className=\"pt-8 px-8 mb-8\">\n                <h6 className=\"mb-0 fs-3\">Recent Income transactions</h6>\n                <p className=\"mb-0\">\n                  Below is the history of your income transactions records\n                </p>\n                <Link\n                  to=\"/add-income\"\n                  className=\"btn  btn-outline-success me-2 m-2\"\n                >\n                  New Income\n                </Link>\n              </div>\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"table-active\">\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Withdrawed By</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Title</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Description</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Amount</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Date</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Action</small>\n                      </button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {loading ? (\n                    <h1>Loading...</h1>\n                  ) : appErr || serverErr ? (\n                    <div>err</div>\n                  ) : incomeList?.docs?.length <= 0 ? (\n                    <h1>No Expense Found</h1>\n                  ) : (\n                    incomeList?.docs?.map(exp => (\n                      <>\n                        <ContentDetails key={exp?._id} item={exp} />\n                      </>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"20px\",\n            }}\n          >\n            <AppPagination\n              setPage={setPage}\n              pageNumber={incomeList?.totalPages}\n            />\n          </div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default IncomeList;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/EditContent.js",["204","205"],"import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moneySVG from \"../img/money.svg\";\n\nimport DisabledButton from \"./DisabledButton\";\nimport { updateExpAction } from \"../redux/slices/expenses/expensesSlices\";\nimport { updateIncomeAction } from \"../redux/slices/income/incomeSlices\";\n\n//form validations\nconst formSchema = Yup.object({\n  title: Yup.string().required(\"title is required\"),\n  description: Yup.string().required(\"description: is required\"),\n  amount: Yup.number().required(\"Amount is required\"),\n});\n\nconst EditContent = ({\n  location: {\n    state: { item },\n  },\n}) => {\n  console.log(item);\n  //dispatch\n  const dispatch = useDispatch();\n  //formik form\n  const formik = useFormik({\n    initialValues: {\n      title: item?.title,\n      description: item?.description,\n      amount: item?.amount,\n    },\n    onSubmit: values => {\n      const data = {\n        ...values,\n        id: item?._id,\n      };\n      item?.type === \"income\"\n        ? dispatch(updateIncomeAction(data))\n        : dispatch(updateExpAction(data));\n    },\n    validationSchema: formSchema,\n  });\n\n  //get data form store\n\n  const expenseData = useSelector(state => state.expenses);\n  const { appErr, serverErr, expenseUpdated, loading } = expenseData;\n  console.log(expenseData);\n  return (\n    <section className=\"py-5 bg-secondary vh-100\">\n      <div className=\"container text-center\">\n        <a className=\"d-inline-block mb-5\">\n          <img\n            className=\"img-fluid\"\n            src={moneySVG}\n            alt=\"SVGeXPENSES\"\n            width=\"200\"\n          />\n        </a>\n\n        <div className=\"row mb-4\">\n          <div className=\"col-12 col-md-8 col-lg-5 mx-auto\">\n            <div className=\"p-4 shadow-sm rounded bg-white\">\n              <form onSubmit={formik.handleSubmit}>\n                <span className=\"text-muted\"></span>\n                {/* Display Err */}\n                {appErr || serverErr ? <div>Err</div> : null}\n                {item?.type === \"income\" ? (\n                  <h2>Update Income</h2>\n                ) : (\n                  <h2>Update Expense</h2>\n                )}\n                <div className=\"mb-3 input-group\">\n                  <input\n                    value={formik.values.title}\n                    onChange={formik.handleChange(\"title\")}\n                    onBlur={formik.handleBlur(\"title\")}\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"Enter Title\"\n                  />\n                </div>\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.title && formik.errors.title}\n                </div>\n                <div className=\"mb-3 input-group\">\n                  <input\n                    value={formik.values.description}\n                    onChange={formik.handleChange(\"description\")}\n                    onBlur={formik.handleBlur(\"description\")}\n                    className=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"Enter Description\"\n                  />\n                </div>\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.description && formik.errors.description}\n                </div>\n                <div className=\"mb-3 input-group\">\n                  <input\n                    value={formik.values.amount}\n                    onChange={formik.handleChange(\"amount\")}\n                    onBlur={formik.handleBlur(\"amount\")}\n                    className=\"form-control\"\n                    type=\"number\"\n                    placeholder=\"Enter Amount\"\n                  />\n                </div>\n                {/* Err */}\n                <div className=\"text-danger mb-2\">\n                  {formik.touched.amount && formik.errors.amount}\n                </div>\n                {loading ? (\n                  <DisabledButton />\n                ) : (\n                  <button type=\"submit\" className=\"btn btn-primary mb-4 w-100\">\n                    Update\n                  </button>\n                )}\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default EditContent;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/redux/slices/accountsStats/accountStatSlices.js",["206"],"import { createAsyncThunk, createSlice, createAction } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport baseURL from \"../../../utils/baseURL\";\n\n//fetch all expenses\nexport const fetchAccountStatsAction = createAsyncThunk(\n  \"account/fetch\",\n  async (payload, { rejectWithValue, getState, dispatch }) => {\n    const user = getState()?.users?.userAuth;\n    const config = {\n      headers: {\n        authorization: `Bearer ${user?.token}`,\n      },\n    };\n    try {\n      const { data } = await axios.get(\n        `${baseURL}/accounts-statistics`,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n\nconst expenseSlices = createSlice({\n  name: \"account\",\n  initialState: {},\n  extraReducers: builder => {\n    //   fetch all Expense\n    builder.addCase(fetchAccountStatsAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchAccountStatsAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.accountDetails = action?.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(fetchAccountStatsAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.msg;\n      state.serverErr = action?.error?.msg;\n    });\n  },\n});\n\nexport default expenseSlices.reducer;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/components/GraphDtata.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/cuurencyFormatter.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/utils/accountStatistics.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileStats.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileExpList.js",["207","208","209"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userProfileAction } from \"../../redux/slices/users/usersSlices\";\nimport LoadingComponent from \"../../components/Loading\";\nimport ErrorDisplayMessage from \"../../components/ErrorDisplayMessage\";\nimport UserProfileContentDetails from \"./UserProfileContentDetails\";\n\nconst UserProfileExpList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(userProfileAction());\n  }, [dispatch]);\n\n  //State\n  const state = useSelector(state => state.users);\n  const { loading, appErr, serverErr, profile } = state;\n\n  return (\n    <>\n      {loading ? (\n        <LoadingComponent />\n      ) : appErr || serverErr ? (\n        <ErrorDisplayMessage>\n          {serverErr} {appErr}\n        </ErrorDisplayMessage>\n      ) : profile?.expenses?.length <= 0 ? (\n        <h2>No Expense Found</h2>\n      ) : (\n        <section className=\"py-6\">\n          <div className=\"container-fluid\">\n            <div className=\"position-relative border rounded-2\">\n              <a\n                className=\"position-absolute top-0 end-0 mt-4 me-4\"\n                href=\"#\"\n              ></a>\n              <div className=\"pt-8 px-8 mb-8\">\n                <h6 className=\"mb-0 fs-3\">Recent Expense transactions</h6>\n                <p className=\"mb-0\">\n                  Below is the history of your expense transactions records\n                </p>\n                <Link\n                  to=\"/add-expense\"\n                  className=\"btn  btn-outline-danger me-2 m-2\"\n                >\n                  New Expense\n                </Link>\n              </div>\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"table-active\">\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Title</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Description</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Amount</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Date</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Action</small>\n                      </button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <>\n                    {profile?.expenses?.map(exp => (\n                      <UserProfileContentDetails item={exp} key={exp?._id} />\n                    ))}\n                  </>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"20px\",\n            }}\n          ></div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default UserProfileExpList;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/Templates/UserProfileIncList.js",["210","211"],"import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst UserProfileIncList = () => {\n  return (\n    <>\n      <section className=\"py-6\">\n        <div className=\"container-fluid\">\n          <div className=\"position-relative border rounded-2\">\n            <a className=\"position-absolute top-0 end-0 mt-4 me-4\" href=\"#\"></a>\n            <div className=\"pt-8 px-8 mb-8\">\n              <h6 className=\"mb-0 fs-3\">Recent income transactions</h6>\n              <p className=\"mb-0\">\n                Below is the history of your income transactions records\n              </p>\n              <Link\n                to=\"/add-income\"\n                className=\"btn  btn-outline-primary me-2 m-2\"\n              >\n                New Income\n              </Link>\n            </div>\n            <table className=\"table\">\n              <thead>\n                <tr className=\"table-active\">\n                  <th scope=\"col\">\n                    <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                      <small>Title</small>\n                    </button>\n                  </th>\n                  <th scope=\"col\">\n                    <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                      <small>Description</small>\n                    </button>\n                  </th>\n                  <th scope=\"col\">\n                    <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                      <small>Amount</small>\n                    </button>\n                  </th>\n                  <th scope=\"col\">\n                    <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                      <small>Date</small>\n                    </button>\n                  </th>\n                  <th scope=\"col\">\n                    <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                      <small>Action</small>\n                    </button>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <>{/* User Profile content goes here */}</>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginTop: \"20px\",\n          }}\n        ></div>\n      </section>\n    </>\n  );\n};\n\nexport default UserProfileIncList;\n",["212","213"],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/Templates/UserProfileContentDetails.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileContentDetails.js",[],"/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UserProfileIncList.js",["214","215","216","217"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userProfileAction } from \"../../redux/slices/users/usersSlices\";\nimport LoadingComponent from \"../../components/Loading\";\nimport ErrorDisplayMessage from \"../../components/ErrorDisplayMessage\";\nimport UserProfileContentDetails from \"./UserProfileContentDetails\";\nimport ContentDetails from \"../../components/ContentDetails\";\n\nconst UserProfileIncList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(userProfileAction());\n  }, [dispatch]);\n\n  //State\n  const state = useSelector(state => state.users);\n  const { loading, appErr, serverErr, profile } = state;\n\n  return (\n    <>\n      {loading ? (\n        <LoadingComponent />\n      ) : appErr || serverErr ? (\n        <ErrorDisplayMessage>\n          {serverErr} {appErr}\n        </ErrorDisplayMessage>\n      ) : (\n        <section className=\"py-6\">\n          <div className=\"container-fluid\">\n            <div className=\"position-relative border rounded-2\">\n              <a\n                className=\"position-absolute top-0 end-0 mt-4 me-4\"\n                href=\"#\"\n              ></a>\n              <div className=\"pt-8 px-8 mb-8\">\n                <h6 className=\"mb-0 fs-3\">Recent income transactions...</h6>\n                <p className=\"mb-0\">\n                  Below is the history of your income transactions records\n                </p>\n                <Link\n                  to=\"/add-income\"\n                  className=\"btn  btn-outline-primary me-2 m-2\"\n                >\n                  New Income\n                </Link>\n              </div>\n              <table className=\"table\">\n                <thead>\n                  <tr className=\"table-active\">\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Title</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Description</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Amount</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Date</small>\n                      </button>\n                    </th>\n                    <th scope=\"col\">\n                      <button className=\"btn d-flex align-items-centerr text-uppercase\">\n                        <small>Action</small>\n                      </button>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {profile?.income?.length <= 0 ? (\n                    <h1>No Income Found</h1>\n                  ) : (\n                    profile?.income?.map(inc => (\n                      <UserProfileContentDetails item={inc} key={inc?._id} />\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              marginTop: \"20px\",\n            }}\n          ></div>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default UserProfileIncList;\n","/Users/inovotek/programming/youtube/youtube-tutorials-projects/expense-tracker /client/src/pages/users/UpdateProfile.js",["218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":18},{"ruleId":"228","severity":1,"message":"229","line":33,"column":21,"nodeType":"230","endLine":37,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":43,"column":6,"nodeType":"233","endLine":43,"endColumn":16,"suggestions":"234"},{"ruleId":"224","severity":1,"message":"235","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"236","line":36,"column":39,"nodeType":"226","messageId":"227","endLine":36,"endColumn":53},{"ruleId":"231","severity":1,"message":"232","line":41,"column":6,"nodeType":"233","endLine":41,"endColumn":30,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":46,"column":11,"nodeType":"230","endLine":46,"endColumn":46},{"ruleId":"240","severity":1,"message":"241","line":32,"column":15,"nodeType":"230","endLine":35,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":32,"column":15,"nodeType":"230","endLine":35,"endColumn":16},{"ruleId":"224","severity":1,"message":"235","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"236","line":37,"column":39,"nodeType":"226","messageId":"227","endLine":37,"endColumn":53},{"ruleId":"231","severity":1,"message":"232","line":42,"column":6,"nodeType":"233","endLine":42,"endColumn":30,"suggestions":"243"},{"ruleId":"238","severity":1,"message":"239","line":47,"column":11,"nodeType":"230","endLine":47,"endColumn":46},{"ruleId":"231","severity":1,"message":"232","line":45,"column":6,"nodeType":"233","endLine":45,"endColumn":20,"suggestions":"244"},{"ruleId":"224","severity":1,"message":"245","line":43,"column":30,"nodeType":"226","messageId":"227","endLine":43,"endColumn":44},{"ruleId":"238","severity":1,"message":"239","line":48,"column":9,"nodeType":"230","endLine":48,"endColumn":44},{"ruleId":"224","severity":1,"message":"246","line":13,"column":17,"nodeType":"226","messageId":"227","endLine":13,"endColumn":27},{"ruleId":"224","severity":1,"message":"247","line":14,"column":15,"nodeType":"226","messageId":"227","endLine":14,"endColumn":23},{"ruleId":"224","severity":1,"message":"248","line":8,"column":10,"nodeType":"226","messageId":"227","endLine":8,"endColumn":27},{"ruleId":"240","severity":1,"message":"241","line":33,"column":15,"nodeType":"230","endLine":36,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":33,"column":15,"nodeType":"230","endLine":36,"endColumn":16},{"ruleId":"224","severity":1,"message":"245","line":48,"column":30,"nodeType":"226","messageId":"227","endLine":48,"endColumn":44},{"ruleId":"238","severity":1,"message":"239","line":53,"column":9,"nodeType":"230","endLine":53,"endColumn":44},{"ruleId":"224","severity":1,"message":"249","line":1,"column":41,"nodeType":"226","messageId":"227","endLine":1,"endColumn":53},{"ruleId":"224","severity":1,"message":"235","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"240","severity":1,"message":"241","line":33,"column":15,"nodeType":"230","endLine":36,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":33,"column":15,"nodeType":"230","endLine":36,"endColumn":16},{"ruleId":"240","severity":1,"message":"241","line":11,"column":13,"nodeType":"230","endLine":11,"endColumn":77},{"ruleId":"238","severity":1,"message":"242","line":11,"column":13,"nodeType":"230","endLine":11,"endColumn":77},{"ruleId":"220","replacedBy":"250"},{"ruleId":"222","replacedBy":"251"},{"ruleId":"224","severity":1,"message":"235","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"252","line":8,"column":8,"nodeType":"226","messageId":"227","endLine":8,"endColumn":22},{"ruleId":"240","severity":1,"message":"241","line":32,"column":15,"nodeType":"230","endLine":35,"endColumn":16},{"ruleId":"238","severity":1,"message":"242","line":32,"column":15,"nodeType":"230","endLine":35,"endColumn":16},{"ruleId":"224","severity":1,"message":"253","line":7,"column":8,"nodeType":"226","messageId":"227","endLine":7,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":44,"column":6,"nodeType":"233","endLine":44,"endColumn":26,"suggestions":"254"},"no-native-reassign",["255"],"no-negated-in-lhs",["256"],"no-unused-vars","'AdminRoute' is defined but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["257"],"'useState' is defined but never used.","'expenseCreated' is assigned a value but never used.",["258"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["259"],["260"],"'expenseUpdated' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'setColor' is assigned a value but never used.","'fetchAllExpAction' is defined but never used.","'createAction' is defined but never used.",["255"],["256"],"'ContentDetails' is defined but never used.","'LoadingComponent' is defined but never used.",["261"],"no-global-assign","no-unsafe-negation",{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [history, userAuth]",{"range":"272","text":"273"},"Update the dependencies array to be: [isIncCreated, dispatch, history]",{"range":"274","text":"275"},"Update the dependencies array to be: [isExpCreated, dispatch, history]",{"range":"276","text":"277"},"Update the dependencies array to be: [history, isRegistered]",{"range":"278","text":"279"},"Update the dependencies array to be: [isEdited, dispatch, history]",{"range":"280","text":"281"},[1094,1104],"[history, userAuth]",[1310,1334],"[isIncCreated, dispatch, history]",[1316,1340],"[isExpCreated, dispatch, history]",[1270,1284],"[history, isRegistered]",[1414,1434],"[isEdited, dispatch, history]"]